# This is largely ported over from my zshrc, which came from elsewhere anyway.
# This started from Anthony's xonshrc.

import os
#import xontrib.prompt_vi_mode

$BROWSER="/usr/bin/google-chrome-beta %s"
$PAGER="less"
$LESS="-r"
$EDITOR="vim"
$GPERFTOOLS="/usr"

$YT_DEST=$HOME + "/conda-py2/"

$PATH.insert(0, $YT_DEST + '/bin/')
$PATH.insert(0, $HOME + '/conda-py3/bin/')
$PATH.append($HOME + '/.cargo/bin')
$PATH.extend(["/home/mturk/emsdk-portable",
              "/home/mturk/emsdk-portable/clang/e1.37.22_64bit",
              "/home/mturk/emsdk-portable/node/4.1.1_64bit/bin",
              "/home/mturk/emsdk-portable/emscripten/1.37.22"])
$LD_LIBRARY_PATH = ['/usr/local/cuda/lib64/', '/usr/local/cuda/lib/']

$CURYT='yt'
$BASEYT=$HOME + '/yt/'
$PYTHONPATH=[$BASEYT + $CURYT]

$XONSH_SHOW_TRACEBACK = True
$XONSH_STORE_STDOUT = True

def _ppbr(args, stdin=None):
    if not os.path.isdir($BASEYT + args[0]):
        print("{}/{} is not a directory.".format($BASEYT, args[0]))
        return
    $CURYT=args[0]
    $PYTHONPATH = [_ for _ in $PYTHONPATH if _ != $CURYT]
    $PYTHONPATH.insert(0, $BASEYT + $CURYT)
    print("Switching to {}".format($PYTHONPATH[0]))

def _yt_env():
    return $CURYT or None

aliases['ppbr'] = _ppbr
#$FORMATTER_DICT['yt_env'] = _yt_env
$PROMPT_FIELDS['yt_env'] = _yt_env
$PROMPT="{yt_env:[{}] }" + $PROMPT
$PROMPT=$PROMPT.replace("BOLD", "INTENSE")
$PROMPT=$PROMPT.replace("BLUE", "CYAN")
$UPDATE_PROMPT_ON_KEYPRESS=False

$UPDATE_PROMPT_ON_KEYPRESS=False

$LS_COLORS='rs=0:di=01;36:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:'

aliases['localweb']='python2.7 -c "import SimpleHTTPServer, SocketServer;Handler = SimpleHTTPServer.SimpleHTTPRequestHandler;httpd = SocketServer.TCPServer((\\\"localhost\\\", 8000), Handler);httpd.serve_forever()"'
aliases['quickweb']='python2.7 -c "import SimpleHTTPServer, SocketServer;Handler = SimpleHTTPServer.SimpleHTTPRequestHandler;httpd = SocketServer.TCPServer((\\\"localhost\\\", 8000), Handler);httpd.serve_forever()"'
aliases['localweb1']='python2.7 -c "import SimpleHTTPServer, SocketServer;Handler = SimpleHTTPServer.SimpleHTTPRequestHandler;httpd = SocketServer.TCPServer((\\\"localhost\\\", 8001), Handler);httpd.serve_forever()"'
aliases['globalweb']='python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"'
